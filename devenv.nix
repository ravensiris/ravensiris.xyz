{
  pkgs,
  lib,
  ...
}: let
  erl = pkgs.beam.interpreters.erlang_27.overrideAttrs (old: let
    newConfigureFlags = ["--disable-jit"] ++ old.configureFlags;
    isAppleSilicon = pkgs.stdenv.isDarwin && pkgs.stdenv.isAarch64;
  in {
    # M1 fix for those unfortunate souls
    # Don't have a Mac anymore to test if it was fixed already and there's no need for this.
    configureFlags =
      if isAppleSilicon
      then newConfigureFlags
      else old.configureFlags;
  });
  beam = pkgs.beam.packagesWith erl;
  elixir = beam.elixir_1_17;
in {
  # enable iex history
  env.ERL_AFLAGS = "-kernel shell_history enabled";

  packages = with pkgs; [nodejs_22] ++ (lib.optionals pkgs.stdenv.isLinux [pkgs.inotify-tools]);

  # make so that no files generated by hex/mix are stored in the home directory
  enterShell = ''
    export MIX_HOME=$PWD/.nix-mix
    export HEX_HOME=$PWD/.nix-hex
    export PATH=$MIX_HOME/bin:$PATH
    export PATH=$HEX_HOME/bin:$PATH
    export PATH=$PATH:$(pwd)/_build/pip_packages/bin
  '';

  languages.elixir = {
    enable = true;
    package = elixir;
  };

  # run 'devenv up' to start up a postgres UNIX socket
  services.postgres = {
    enable = true;
    initialScript = ''
      CREATE ROLE postgres WITH LOGIN SUPERUSER;
    '';
  };
}
